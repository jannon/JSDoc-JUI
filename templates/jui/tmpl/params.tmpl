<?js
    var params = this;
    
    /* sort subparams under their parent params (like opts.classname) */
    var parentParam = null;
    params.forEach(function(param, i) {
        if (!param) { return; }
        if ( parentParam && param.name.indexOf(parentParam.name + '.') === 0 ) {
            param.name = param.name.substr(parentParam.name.length+1);
            parentParam.subparams = parentParam.subparams || [];
            parentParam.subparams.push(param);
            params[i] = null;
        }
        else {
            parentParam = param;
        }
    });
    
    /* determine if we need extra columns, "attributes" and "default" */
    params.hasAttributes = false;
    params.hasDefault = false;
    params.hasName = false;
    
    params.forEach(function(param) {
        if (!param) { return; }
        
        if (param.optional || param.nullable) {
            params.hasAttributes = true;
        }
        
        if (param.name) {
            params.hasName = true;
        }
        
        if (typeof param.defaultvalue !== 'undefined') {
            params.hasDefault = true;
        }
    });
?>

<table class="params" cellspacing="0">
    <thead>
	<tr class="bottom-border">
        <th width="20"></th>
        <th width="15%" class="name">Name</th>
		<th width="10%">Type</th>
		<th width="10%">Attributes</th>
		<th width="10%">Default</th>
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	<?js
	    params.forEach(function(param, z) {
	        if (!param) {
                return;
            }

            print( z%2==0 ? '<tr class="even">' : '<tr class="odd">' );
            print( '<td class="number right_border"><div>'+(z+1)+'</div></td>' );

            if (params.hasName) {
                print( '<td class="name">'+param.name+'</td>' );
            } else {
                print( '<td class="name"></td>' );
            }


            print( '<td class="type type-param">' );
            if (param.type && param.type.names) {
                param.type.names.forEach(function(name, i) {
                    print( linkto(name, htmlsafe(name)) );
                    if (i < param.type.names.length-1) { print(' | '); }
                }); 
            }
            print( '</td>' );

            print( '<td class="attributes">' );
            if (param.optional && param.nullable) {
                print( 'Optional, Nullable' );
            }
            else if (param.optional) {
                print( 'Optional' );
            }
            else if (param.nullable) {
                print( 'Nullable' );
            }
            print( '</td>' );
            

            print( '<td class="default">' );
            if (typeof param.defaultvalue !== 'undefined') {
                print( htmlsafe(param.defaultvalue) );
            }
            print( '</td>' );

            print( '<td class="description last">'+param.description+'</td>' );
            print( '</tr>' );


            if (param.subparams) {
                var j = 1;
                param.subparams.forEach( function (subparam) {
                    /* XXX should probably make this recursive */
                    print( z%2==0 ? '<tr class="even">' : '<tr class="odd">' );
                    print( '<td class="number right_border"></td>' );
        
                    if (subparam.name) {
                        print( '<td class="name subparam">'+param.name+'.'+subparam.name+'</td>' );
                    } else {
                        print( '<td class="name"></td>' );
                    }
        
        
                    print( '<td class="type type-param">' );
                    if (subparam.type && subparam.type.names) {
                        subparam.type.names.forEach(function(name, i) {
                            print( linkto(name, htmlsafe(name)) );
                            if (i < subparam.type.names.length-1) { print(' | '); }
                        }); 
                    }
                    print( '</td>' );
        
                    print( '<td class="attributes">' );
                    if (subparam.optional) {
                        print( '&lt;optional><br>' );
                    }
                    if (subparam.nullable) {
                        print( '&lt;nullable><br>' );
                    }
                    print( '</td>' );
                    
        
                    print( '<td class="default">' );
                    if (typeof subparam.defaultvalue !== 'undefined') {
                        print( htmlsafe(subparam.defaultvalue) );
                    }
                    print( '</td>' );
        
                    print( '<td class="description last">'+subparam.description+'</td>' );
                    print( '</tr>' );
                    
                    j++;
                } );
            }
        } );
    ?>
	</tbody>
</table>